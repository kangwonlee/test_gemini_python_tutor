name: Autograding Tests
on:
  push:
  workflow_dispatch:
  repository_dispatch:
  schedule:
    - cron: '45 01 21 * *'

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Update pip
      run: python -m pip install --upgrade pip

    - name: Create and Activate Virtual Environment
      run: |
        python -m venv test-env
        source test-env/bin/activate
        echo $VIRTUAL_ENV

    - name: Get pip cache dir
      id: pip-cache
      run: |
        source test-env/bin/activate
        echo $VIRTUAL_ENV
        echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

    - name: pip cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

    - name: Setup test environment
      id: setup-env
      run: |
        source test-env/bin/activate
        echo $VIRTUAL_ENV
        pip install -r requirements.txt

    - name: Set report file names
      id: json
      run: |
        echo "syntax=report_syntax.json" >> $GITHUB_OUTPUT
        echo "style=report_style.json" >> $GITHUB_OUTPUT
        echo "results=report_results.json" >> $GITHUB_OUTPUT

    - name: check syntax
      id: check-syntax
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: check syntax
        setup-command: ". test-env/bin/activate && echo $VIRTUAL_ENV && python -m pip list"
        command: ". test-env/bin/activate && python -m pytest --json-report --json-report-file=${{ steps.json.outputs.syntax }} tests/test_syntax.py"
        timeout: 1
        max-score: 2

    - name: check style
      id: check-style
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: check style
        setup-command: ". test-env/bin/activate && echo $VIRTUAL_ENV && python -m pip list"
        command: ". test-env/bin/activate && python -m pytest --json-report --json-report-file=${{ steps.json.outputs.style }} tests/test_style.py"
        timeout: 1
        max-score: 1
  
    - name: test results
      id: test-results
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: test results
        setup-command: ". test-env/bin/activate && echo $VIRTUAL_ENV && python -m pip list"
        command: ". test-env/bin/activate && python -m pytest -n auto --json-report --json-report-file=${{ steps.json.outputs.results }} tests/test_results.py"
        timeout: 2
        max-score: 2

    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        CHECK-SYNTAX_RESULTS: "${{steps.check-syntax.outputs.result}}"
        CHECK-STYLE_RESULTS: "${{steps.check-style.outputs.result}}"
        TEST-RESULTS_RESULTS: "${{steps.test-results.outputs.result}}"
      with:
        runners: check-syntax,check-style,test-results

    - name: AI Tutor English
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-korean
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: English
      timeout-minutes: 5

    - name: AI Tutor Korean
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: Korean
      timeout-minutes: 5

    - name: AI Tutor Bahasa Indonesia
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-bahasa-indonesian
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: Bahasa Indonesia
      timeout-minutes: 5

    - name: AI Tutor Chinese
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-chinese
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: Chinese
      timeout-minutes: 5

    - name: AI Tutor French
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-french
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: French
      timeout-minutes: 5

    - name: AI Tutor German
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-german
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: German
      timeout-minutes: 5

    - name: AI Tutor Italian
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-italian
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: Italian
      timeout-minutes: 5

    - name: AI Tutor Japanese
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-japanese
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: Japanese
      timeout-minutes: 5

    - name: AI Tutor Nederlands
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-nederlands
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: Nederlands
      timeout-minutes: 5

    - name: AI Tutor Norwegian
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-norwegian
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: Norwegian
      timeout-minutes: 5

    - name: AI Tutor Spanish
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-spanish
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: Spanish
      timeout-minutes: 5

    - name: AI Tutor Swedish
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-swedish
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: Swedish
      timeout-minutes: 5

    - name: AI Tutor Thai
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-thai
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: Thai
      timeout-minutes: 5

    - name: AI Tutor Vietnamese
      uses: kangwonlee/gemini-python-tutor@main
      id: ai_tutor-vietnamese
      if: always()
      with:
        report-files: ${{ steps.json.outputs.syntax }},${{ steps.json.outputs.style }},${{ steps.json.outputs.results }}
        student-files: exercise.py
        readme-path: README.md
        api-key: ${{ secrets.GOOGLE_API_KEY }}
        explanation-in: Vietnamese
      timeout-minutes: 5

    - name: upload artifacts
      id: artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: plots
        path: |
          ./*.png
          ./*.json
        retention-days: 21
        overwrite: true
